// Code generated by goa v3.7.6, DO NOT EDIT.
//
// BabyNames endpoints
//
// Command:
// $ goa gen github.com/crossnokaye/carbon/services/baby/design

package babynames

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "BabyNames" service endpoints.
type Endpoints struct {
	GetName goa.Endpoint
}

// NewEndpoints wraps the methods of the "BabyNames" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		GetName: NewGetNameEndpoint(s),
	}
}

// Use applies the given middleware to all the "BabyNames" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.GetName = m(e.GetName)
}

// NewGetNameEndpoint returns an endpoint function that calls the method
// "GetName" of service "BabyNames".
func NewGetNameEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetNamePayload)
		return s.GetName(ctx, p)
	}
}
