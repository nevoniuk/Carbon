// Code generated by goa v3.7.6, DO NOT EDIT.
//
// BabyNames HTTP server encoders and decoders
//
// Command:
// $ goa gen github.com/crossnokaye/carbon/services/baby/design

package server

import (
	"context"
	"net/http"

	babynames "github.com/crossnokaye/carbon/services/baby/gen/baby_names"
	goahttp "goa.design/goa/v3/http"
)

// EncodeGetNameResponse returns an encoder for responses returned by the
// BabyNames GetName endpoint.
func EncodeGetNameResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, interface{}) error {
	return func(ctx context.Context, w http.ResponseWriter, v interface{}) error {
		res, _ := v.(*babynames.Name)
		enc := encoder(ctx, w)
		body := NewGetNameResponseBody(res)
		w.WriteHeader(http.StatusOK)
		return enc.Encode(body)
	}
}

// DecodeGetNameRequest returns a decoder for requests sent to the BabyNames
// GetName endpoint.
func DecodeGetNameRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) func(*http.Request) (interface{}, error) {
	return func(r *http.Request) (interface{}, error) {
		var (
			year string

			params = mux.Vars(r)
		)
		year = params["year"]
		payload := NewGetNamePayload(year)

		return payload, nil
	}
}
