// Code generated by goa v3.7.6, DO NOT EDIT.
//
// Poller client
//
// Command:
// $ goa gen github.com/crossnokaye/carbon/services/poller/design

package poller

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Poller" service client.
type Client struct {
	CarbonEmissionsEndpoint goa.Endpoint
	AggregateDataEndpoint   goa.Endpoint
}

// NewClient initializes a "Poller" service client given the endpoints.
func NewClient(carbonEmissions, aggregateData goa.Endpoint) *Client {
	return &Client{
		CarbonEmissionsEndpoint: carbonEmissions,
		AggregateDataEndpoint:   aggregateData,
	}
}

// CarbonEmissions calls the "carbon_emissions" endpoint of the "Poller"
// service.
func (c *Client) CarbonEmissions(ctx context.Context) (err error) {
	_, err = c.CarbonEmissionsEndpoint(ctx, nil)
	return
}

// AggregateData calls the "aggregate_data" endpoint of the "Poller" service.
// AggregateData may return the following errors:
//	- "missing-required-parameter" (type *goa.ServiceError): missing-required-parameter
//	- error: internal error
func (c *Client) AggregateData(ctx context.Context) (err error) {
	_, err = c.AggregateDataEndpoint(ctx, nil)
	return
}
