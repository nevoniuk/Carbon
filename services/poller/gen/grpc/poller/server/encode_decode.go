// Code generated by goa v3.7.6, DO NOT EDIT.
//
// Poller gRPC server encoders and decoders
//
// Command:
// $ goa gen github.com/crossnokaye/carbon/services/poller/design

package server

import (
	"context"

	"google.golang.org/grpc/metadata"
)

// EncodeCarbonEmissionsResponse encodes responses from the "Poller" service
// "carbon_emissions" endpoint.
func EncodeCarbonEmissionsResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	resp := NewProtoCarbonEmissionsResponse()
	return resp, nil
}

// EncodeAggregateDataResponse encodes responses from the "Poller" service
// "aggregate_data" endpoint.
func EncodeAggregateDataResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	resp := NewProtoAggregateDataResponse()
	return resp, nil
}
