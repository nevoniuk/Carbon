// Code generated by goa v3.7.6, DO NOT EDIT.
//
// Data service
//
// Command:
// $ goa gen github.com/crossnokaye/carbon/services/poller/design

package data

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Service that provides forecasts to clickhouse from Carbonara API
type Service interface {
	// query api getting search data for carbon_intensity event
	CarbonEmissions(context.Context) (err error)
	// query api using a search call for a fuel event from Carbonara API
	Fuels(context.Context) (err error)
	// get the aggregate data for an event from clickhouse
	AggregateData(context.Context) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "Data"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"carbon_emissions", "fuels", "aggregate_data"}

// MakeDataNotAvailable builds a goa.ServiceError from an error.
func MakeDataNotAvailable(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "data_not_available",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeMissingRequiredParameter builds a goa.ServiceError from an error.
func MakeMissingRequiredParameter(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "missing-required-parameter",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
