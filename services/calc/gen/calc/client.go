// Code generated by goa v3.7.6, DO NOT EDIT.
//
// calc client
//
// Command:
// $ goa gen github.com/crossnokaye/carbon/services/calc/design

package calc

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "calc" service client.
type Client struct {
	HandleRequestsEndpoint       goa.Endpoint
	CarbonReportEndpointEndpoint goa.Endpoint
}

// NewClient initializes a "calc" service client given the endpoints.
func NewClient(handleRequests, carbonReportEndpoint goa.Endpoint) *Client {
	return &Client{
		HandleRequestsEndpoint:       handleRequests,
		CarbonReportEndpointEndpoint: carbonReportEndpoint,
	}
}

// HandleRequests calls the "handle_requests" endpoint of the "calc" service.
func (c *Client) HandleRequests(ctx context.Context, p *RequestPayload) (res *AllReports, err error) {
	var ires interface{}
	ires, err = c.HandleRequestsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AllReports), nil
}

// CarbonReportEndpoint calls the "carbon_report" endpoint of the "calc"
// service.
func (c *Client) CarbonReportEndpoint(ctx context.Context) (err error) {
	_, err = c.CarbonReportEndpointEndpoint(ctx, nil)
	return
}
