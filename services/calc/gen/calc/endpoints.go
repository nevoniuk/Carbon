// Code generated by goa v3.7.6, DO NOT EDIT.
//
// calc endpoints
//
// Command:
// $ goa gen github.com/crossnokaye/carbon/services/calc/design -o services/calc

package calc

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "calc" service endpoints.
type Endpoints struct {
	CalculateReports goa.Endpoint
	GetControlPoints goa.Endpoint
	GetPower         goa.Endpoint
	GetEmissions     goa.Endpoint
	HandleRequests   goa.Endpoint
	Carbonreport     goa.Endpoint
}

// NewEndpoints wraps the methods of the "calc" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		CalculateReports: NewCalculateReportsEndpoint(s),
		GetControlPoints: NewGetControlPointsEndpoint(s),
		GetPower:         NewGetPowerEndpoint(s),
		GetEmissions:     NewGetEmissionsEndpoint(s),
		HandleRequests:   NewHandleRequestsEndpoint(s),
		Carbonreport:     NewCarbonreportEndpoint(s),
	}
}

// Use applies the given middleware to all the "calc" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.CalculateReports = m(e.CalculateReports)
	e.GetControlPoints = m(e.GetControlPoints)
	e.GetPower = m(e.GetPower)
	e.GetEmissions = m(e.GetEmissions)
	e.HandleRequests = m(e.HandleRequests)
	e.Carbonreport = m(e.Carbonreport)
}

// NewCalculateReportsEndpoint returns an endpoint function that calls the
// method "calculate_reports" of service "calc".
func NewCalculateReportsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*CarbonReport)
		return s.CalculateReports(ctx, p)
	}
}

// NewGetControlPointsEndpoint returns an endpoint function that calls the
// method "get_control_points" of service "calc".
func NewGetControlPointsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*PastValuesPayload)
		return s.GetControlPoints(ctx, p)
	}
}

// NewGetPowerEndpoint returns an endpoint function that calls the method
// "get_power" of service "calc".
func NewGetPowerEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetPowerPayload)
		return s.GetPower(ctx, p)
	}
}

// NewGetEmissionsEndpoint returns an endpoint function that calls the method
// "get_emissions" of service "calc".
func NewGetEmissionsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*EmissionsPayload)
		return s.GetEmissions(ctx, p)
	}
}

// NewHandleRequestsEndpoint returns an endpoint function that calls the method
// "handle_requests" of service "calc".
func NewHandleRequestsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*RequestPayload)
		return nil, s.HandleRequests(ctx, p)
	}
}

// NewCarbonreportEndpoint returns an endpoint function that calls the method
// "carbonreport" of service "calc".
func NewCarbonreportEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return nil, s.Carbonreport(ctx)
	}
}
