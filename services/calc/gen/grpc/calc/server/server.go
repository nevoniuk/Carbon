// Code generated by goa v3.7.6, DO NOT EDIT.
//
// calc gRPC server
//
// Command:
// $ goa gen github.com/crossnokaye/carbon/services/calc/design

package server

import (
	"context"

	calc "github.com/crossnokaye/carbon/services/calc/gen/calc"
	calcpb "github.com/crossnokaye/carbon/services/calc/gen/grpc/calc/pb"
	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the calcpb.CalcServer interface.
type Server struct {
	HandleRequestsH  goagrpc.UnaryHandler
	GetCarbonReportH goagrpc.UnaryHandler
	calcpb.UnimplementedCalcServer
}

// ErrorNamer is an interface implemented by generated error structs that
// exposes the name of the error as defined in the expr.
type ErrorNamer interface {
	ErrorName() string
}

// New instantiates the server struct with the calc service endpoints.
func New(e *calc.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		HandleRequestsH:  NewHandleRequestsHandler(e.HandleRequests, uh),
		GetCarbonReportH: NewGetCarbonReportHandler(e.GetCarbonReport, uh),
	}
}

// NewHandleRequestsHandler creates a gRPC handler which serves the "calc"
// service "handle_requests" endpoint.
func NewHandleRequestsHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeHandleRequestsRequest, EncodeHandleRequestsResponse)
	}
	return h
}

// HandleRequests implements the "HandleRequests" method in calcpb.CalcServer
// interface.
func (s *Server) HandleRequests(ctx context.Context, message *calcpb.HandleRequestsRequest) (*calcpb.HandleRequestsResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "handle_requests")
	ctx = context.WithValue(ctx, goa.ServiceKey, "calc")
	resp, err := s.HandleRequestsH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*calcpb.HandleRequestsResponse), nil
}

// NewGetCarbonReportHandler creates a gRPC handler which serves the "calc"
// service "get_carbon_report" endpoint.
func NewGetCarbonReportHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, nil, EncodeGetCarbonReportResponse)
	}
	return h
}

// GetCarbonReport implements the "GetCarbonReport" method in calcpb.CalcServer
// interface.
func (s *Server) GetCarbonReport(ctx context.Context, message *calcpb.GetCarbonReportRequest) (*calcpb.GetCarbonReportResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "get_carbon_report")
	ctx = context.WithValue(ctx, goa.ServiceKey, "calc")
	resp, err := s.GetCarbonReportH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*calcpb.GetCarbonReportResponse), nil
}
