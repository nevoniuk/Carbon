// Code generated by goa v3.7.6, DO NOT EDIT.
//
// calc gRPC server types
//
// Command:
// $ goa gen github.com/crossnokaye/carbon/services/calc/design

package server

import (
	calcpb "github.com/crossnokaye/carbon/services/calc/gen/grpc/calc/pb"
)

// NewProtoCalculateReportsResponse builds the gRPC response type from the
// result of the "calculate_reports" endpoint of the "calc" service.
func NewProtoCalculateReportsResponse() *calcpb.CalculateReportsResponse {
	message := &calcpb.CalculateReportsResponse{}
	return message
}

// NewProtoGetControlPointsResponse builds the gRPC response type from the
// result of the "get_control_points" endpoint of the "calc" service.
func NewProtoGetControlPointsResponse() *calcpb.GetControlPointsResponse {
	message := &calcpb.GetControlPointsResponse{}
	return message
}

// NewProtoGetPowerResponse builds the gRPC response type from the result of
// the "get_power" endpoint of the "calc" service.
func NewProtoGetPowerResponse() *calcpb.GetPowerResponse {
	message := &calcpb.GetPowerResponse{}
	return message
}

// NewProtoGetEmissionsResponse builds the gRPC response type from the result
// of the "get_emissions" endpoint of the "calc" service.
func NewProtoGetEmissionsResponse() *calcpb.GetEmissionsResponse {
	message := &calcpb.GetEmissionsResponse{}
	return message
}

// NewProtoHandleRequestsResponse builds the gRPC response type from the result
// of the "handle_requests" endpoint of the "calc" service.
func NewProtoHandleRequestsResponse() *calcpb.HandleRequestsResponse {
	message := &calcpb.HandleRequestsResponse{}
	return message
}

// NewProtoCarbonreportResponse builds the gRPC response type from the result
// of the "carbonreport" endpoint of the "calc" service.
func NewProtoCarbonreportResponse() *calcpb.CarbonreportResponse {
	message := &calcpb.CarbonreportResponse{}
	return message
}
