// Code generated by goa v3.7.6, DO NOT EDIT.
//
// calc gRPC client types
//
// Command:
// $ goa gen github.com/crossnokaye/carbon/services/calc/design

package client

import (
	calcpb "github.com/crossnokaye/carbon/services/calc/gen/grpc/calc/pb"
)

// NewProtoCalculateReportsRequest builds the gRPC request type from the
// payload of the "calculate_reports" endpoint of the "calc" service.
func NewProtoCalculateReportsRequest() *calcpb.CalculateReportsRequest {
	message := &calcpb.CalculateReportsRequest{}
	return message
}

// NewProtoGetControlPointsRequest builds the gRPC request type from the
// payload of the "get_control_points" endpoint of the "calc" service.
func NewProtoGetControlPointsRequest() *calcpb.GetControlPointsRequest {
	message := &calcpb.GetControlPointsRequest{}
	return message
}

// NewProtoGetPowerRequest builds the gRPC request type from the payload of the
// "get_power" endpoint of the "calc" service.
func NewProtoGetPowerRequest() *calcpb.GetPowerRequest {
	message := &calcpb.GetPowerRequest{}
	return message
}

// NewProtoGetEmissionsRequest builds the gRPC request type from the payload of
// the "get_emissions" endpoint of the "calc" service.
func NewProtoGetEmissionsRequest() *calcpb.GetEmissionsRequest {
	message := &calcpb.GetEmissionsRequest{}
	return message
}

// NewProtoHandleRequestsRequest builds the gRPC request type from the payload
// of the "handle_requests" endpoint of the "calc" service.
func NewProtoHandleRequestsRequest() *calcpb.HandleRequestsRequest {
	message := &calcpb.HandleRequestsRequest{}
	return message
}

// NewProtoCarbonreportRequest builds the gRPC request type from the payload of
// the "carbonreport" endpoint of the "calc" service.
func NewProtoCarbonreportRequest() *calcpb.CarbonreportRequest {
	message := &calcpb.CarbonreportRequest{}
	return message
}
