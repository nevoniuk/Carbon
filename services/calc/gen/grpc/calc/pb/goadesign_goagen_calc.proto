// Code generated with goa v3.7.6, DO NOT EDIT.
//
// calc protocol buffer definition
//
// Command:
// $ goa gen github.com/crossnokaye/carbon/services/calc/design

syntax = "proto3";

package calc;

option go_package = "/calcpb";

// Service to interpret CO2 emissions through power and carbon intensity data
service Calc {
	// This endpoint is used by a front end service to return energy usage
// information
	rpc HandleRequests (HandleRequestsRequest) returns (HandleRequestsResponse);
	// Make reports available to external/R&D clients
	rpc CarbonReportEndpoint (CarbonReportRequest) returns (CarbonReportResponse);
}

message HandleRequestsRequest {
	// org
	string org = 1;
	// Period
	Period period = 2;
	// building
	string building = 3;
	// interval
	string interval = 4;
}
// Period of time from start to end of Forecast
message Period {
	// Start time
	string start_time = 1;
	// End time
	string end_time = 2;
}

message HandleRequestsResponse {
	// carbon_intensity_reports
	repeated CarbonReport carbon_intensity_reports = 1;
	// power_reports
	repeated ElectricalReport power_reports = 2;
	// total_emission_reports
	repeated EmissionsReport total_emission_reports = 3;
}
// Carbon Report from clickhouse
message CarbonReport {
	// generated_rate
	double generated_rate = 1;
	// Duration
	Period duration = 2;
	// duration_type
	string duration_type = 3;
	// region
	string region = 4;
}
// Energy Generation Report
message ElectricalReport {
	// period
	Period period = 1;
	// postalcode
	string postalcode = 2;
	// facility
	string facility = 3;
	// building
	string building = 4;
	// stamp
	repeated PowerStamp stamp = 5;
	// intervalType
	string interval_type = 6;
}

message PowerStamp {
	// time
	string time = 1;
	// power stamp in KW
	double gen_rate = 2;
}
// Carbon/Energy Generation Report
message EmissionsReport {
	// Duration
	Period duration = 1;
	// duration_type
	string duration_type = 2;
	// point
	repeated DataPoint point = 3;
	// facility
	string facility = 4;
}
// Contains a time stamp with its respective x-y coordinates
message DataPoint {
	// time
	string time = 1;
	// carbon_rate
	double carbon_rate = 2;
}

message CarbonReportRequest {
}

message CarbonReportResponse {
}
