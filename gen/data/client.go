// Code generated by goa v3.7.6, DO NOT EDIT.
//
// Data client
//
// Command:
// $ goa gen smartservice/design

package data

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Data" service client.
type Client struct {
	CarbonEmissionsEndpoint  goa.Endpoint
	FuelsEndpoint            goa.Endpoint
	GetAggregateDataEndpoint goa.Endpoint
}

// NewClient initializes a "Data" service client given the endpoints.
func NewClient(carbonEmissions, fuels, getAggregateData goa.Endpoint) *Client {
	return &Client{
		CarbonEmissionsEndpoint:  carbonEmissions,
		FuelsEndpoint:            fuels,
		GetAggregateDataEndpoint: getAggregateData,
	}
}

// CarbonEmissions calls the "carbon_emissions" endpoint of the "Data" service.
// CarbonEmissions may return the following errors:
//	- "data_not_available" (type *goa.ServiceError): The data is not available or server error
//	- "missing-required-parameter" (type *goa.ServiceError): missing-required-parameter
//	- error: internal error
func (c *Client) CarbonEmissions(ctx context.Context, p []string) (res *CarbonForecast, err error) {
	var ires interface{}
	ires, err = c.CarbonEmissionsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CarbonForecast), nil
}

// Fuels calls the "fuels" endpoint of the "Data" service.
// Fuels may return the following errors:
//	- "data_not_available" (type *goa.ServiceError): The data is not available or server error
//	- "missing-required-parameter" (type *goa.ServiceError): missing-required-parameter
//	- error: internal error
func (c *Client) Fuels(ctx context.Context, p []string) (res *FuelsForecast, err error) {
	var ires interface{}
	ires, err = c.FuelsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*FuelsForecast), nil
}

// GetAggregateData calls the "get_aggregate_data" endpoint of the "Data"
// service.
// GetAggregateData may return the following errors:
//	- "data_not_available" (type *goa.ServiceError): The data is not available or server error
//	- "missing-required-parameter" (type *goa.ServiceError): missing-required-parameter
//	- error: internal error
func (c *Client) GetAggregateData(ctx context.Context, p string) (res *AggregateData, err error) {
	var ires interface{}
	ires, err = c.GetAggregateDataEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AggregateData), nil
}
